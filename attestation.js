class SelfAttestation {
    constructor() {
        this.session = null;
        this.currentQuestion = 0;
        this.answers = [];
        this.startTime = null;
        this.timer = null;
        this.autoSaveInterval = null;

        this.init();
    }

    async init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏...');

        const urlParams = new URLSearchParams(window.location.search);
        const code = urlParams.get('code');

        if (!code) {
            alert('–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            window.location.href = 'index.html';
            return;
        }

        await this.loadSession(code);
        this.bindEvents();
        this.startAttestation();
    }

    async loadSession(code) {
        console.log(`üîë –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏ –ø–æ –∫–æ–¥—É: ${code}`);

        const sessions = JSON.parse(localStorage.getItem('attestationSessions') || '{}');
        this.session = sessions[code];

        if (!this.session) {
            alert('–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–∞');
            window.location.href = 'index.html';
            return;
        }

        console.log('‚úÖ –°–µ—Å—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', {
            name: this.session.name,
            role: this.session.role,
            server: this.session.server,
            questionsCount: this.session.questions.length
        });

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const savedData = localStorage.getItem(`attestation_${code}`);
        if (savedData) {
            const data = JSON.parse(savedData);
            this.currentQuestion = data.currentQuestion || 0;
            this.answers = data.answers || [];
            console.log('üìÇ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
                currentQuestion: this.currentQuestion,
                answersCount: this.answers.length
            });
        }

        this.session.code = code;
    }

    bindEvents() {
        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞
        const answerInput = document.getElementById('answerInput');
        if (answerInput) {
            answerInput.addEventListener('input', () => {
                this.saveCurrentAnswer();
                clearTimeout(this.autoSaveTimeout);
                this.autoSaveTimeout = setTimeout(() => {
                    this.autoSave();
                }, 2000);
            });
        }

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('beforeunload', (e) => {
            if (this.currentQuestion < this.session.questions.length) {
                e.preventDefault();
                e.returnValue = '–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã. –í—ã —É–≤–µ—Ä–µ–Ω—ã?';
            }
        });
    }

    startAttestation() {
        console.log('üéØ –ó–∞–ø—É—Å–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏');

        this.startTime = Date.now();
        this.showCurrentQuestion();
        this.updateProgress();
        this.startTimer();
        this.startAutoSave();

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleEl = document.querySelector('.header-title');
        if (titleEl) {
            titleEl.textContent = `–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è: ${this.session.name}`;
        }
    }

    showCurrentQuestion() {
        if (this.currentQuestion >= this.session.questions.length) {
            this.finishAttestation();
            return;
        }

        const question = this.session.questions[this.currentQuestion];
        console.log(`‚ùì –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å ${this.currentQuestion + 1}/${this.session.questions.length}`);

        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        document.getElementById('questionCounter').textContent = 
            `–í–æ–ø—Ä–æ—Å ${this.currentQuestion + 1}`;
        document.getElementById('questionText').textContent = question;

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        const answerInput = document.getElementById('answerInput');
        if (answerInput && this.answers[this.currentQuestion]) {
            answerInput.value = this.answers[this.currentQuestion].text || '';
        } else if (answerInput) {
            answerInput.value = '';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.updateNavigation();

        // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        if (answerInput) {
            answerInput.focus();
        }

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
        const questionCard = document.getElementById('questionCard');
        if (questionCard) {
            questionCard.style.animation = 'none';
            setTimeout(() => {
                questionCard.style.animation = 'questionSlide 0.5s ease-out';
            }, 10);
        }
    }

    updateNavigation() {
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');

        if (prevBtn) {
            prevBtn.disabled = this.currentQuestion === 0;
        }

        if (nextBtn) {
            if (this.currentQuestion === this.session.questions.length - 1) {
                nextBtn.textContent = '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—é';
                nextBtn.classList.remove('btn-primary');
                nextBtn.classList.add('btn-primary');
                nextBtn.style.background = 'var(--system-orange)';
            } else {
                nextBtn.textContent = '–°–ª–µ–¥—É—é—â–∏–π ‚Üí';
                nextBtn.style.background = '';
            }
        }
    }

    updateProgress() {
        const progress = (this.currentQuestion / this.session.questions.length) * 100;
        const progressFill = document.getElementById('progressFill');
        const progressText = document.getElementById('progressText');

        if (progressFill) {
            progressFill.style.width = `${progress}%`;
        }

        if (progressText) {
            progressText.textContent = 
                `–í–æ–ø—Ä–æ—Å ${this.currentQuestion + 1} –∏–∑ ${this.session.questions.length}`;
        }
    }

    saveCurrentAnswer() {
        const answerInput = document.getElementById('answerInput');
        if (!answerInput) return;

        const answer = {
            questionIndex: this.currentQuestion,
            text: answerInput.value.trim(),
            timestamp: Date.now()
        };

        this.answers[this.currentQuestion] = answer;
    }

    autoSave() {
        const data = {
            currentQuestion: this.currentQuestion,
            answers: this.answers,
            lastSave: Date.now()
        };

        localStorage.setItem(`attestation_${this.session.code}`, JSON.stringify(data));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        const status = document.getElementById('autoSaveStatus');
        if (status) {
            status.textContent = '‚úÖ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ';
            status.style.color = 'var(--success)';

            setTimeout(() => {
                status.textContent = '–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥';
                status.style.color = '';
            }, 2000);
        }

        console.log('üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
    }

    startAutoSave() {
        this.autoSaveInterval = setInterval(() => {
            this.autoSave();
        }, 5000);
    }

    startTimer() {
        this.timer = setInterval(() => {
            const elapsed = Math.floor((Date.now() - this.startTime) / 1000);
            const minutes = Math.floor(elapsed / 60);
            const seconds = elapsed % 60;

            const timerEl = document.getElementById('timer');
            if (timerEl) {
                timerEl.textContent = 
                    `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            }
        }, 1000);
    }

    finishAttestation() {
        console.log('üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏');

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
        if (this.timer) clearInterval(this.timer);
        if (this.autoSaveInterval) clearInterval(this.autoSaveInterval);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.autoSave();

        // –°–∫—Ä—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        document.getElementById('questionCard').style.display = 'none';
        document.getElementById('controls').style.display = 'none';
        document.getElementById('resultsContainer').style.display = 'block';

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–æ –¥–µ–ª–∞–ª –±—ã –∫—É—Ä–∞—Ç–æ—Ä)
        const completedAnswers = this.answers.filter(a => a && a.text.length > 5).length;
        const totalQuestions = this.session.questions.length;
        const estimatedScore = (completedAnswers / totalQuestions) * 7; // –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞

        const finalScoreEl = document.getElementById('finalScore');
        const resultMessageEl = document.getElementById('resultMessage');

        if (finalScoreEl) {
            finalScoreEl.textContent = `${estimatedScore.toFixed(1)}/10`;
        }

        if (resultMessageEl) {
            if (estimatedScore >= 6) {
                resultMessageEl.textContent = 'üéâ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ: –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞!';
                resultMessageEl.style.color = 'var(--success)';
            } else {
                resultMessageEl.textContent = '‚ùå –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ: –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞';
                resultMessageEl.style.color = 'var(--error)';
            }

            resultMessageEl.innerHTML += '<br><small>–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –∫—É—Ä–∞—Ç–æ—Ä</small>';
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function nextQuestion() {
    const attestation = window.selfAttestation;
    if (!attestation) return;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–≤–µ—Ç
    attestation.saveCurrentAnswer();

    if (attestation.currentQuestion >= attestation.session.questions.length - 1) {
        // –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å - –∑–∞–≤–µ—Ä—à–∞–µ–º
        attestation.finishAttestation();
    } else {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        attestation.currentQuestion++;
        attestation.showCurrentQuestion();
        attestation.updateProgress();
    }
}

function previousQuestion() {
    const attestation = window.selfAttestation;
    if (!attestation) return;

    if (attestation.currentQuestion > 0) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–≤–µ—Ç
        attestation.saveCurrentAnswer();

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        attestation.currentQuestion--;
        attestation.showCurrentQuestion();
        attestation.updateProgress();
    }
}

function saveAndReturn() {
    const attestation = window.selfAttestation;
    if (!attestation) return;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const result = {
        name: attestation.session.name,
        role: attestation.session.role,
        server: attestation.session.server,
        mode: 'self',
        score: 0, // –ë—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫—É—Ä–∞—Ç–æ—Ä–æ–º
        passed: false, // –ë—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫—É—Ä–∞—Ç–æ—Ä–æ–º
        duration: Math.floor((Date.now() - attestation.startTime) / 1000),
        answers: attestation.answers,
        questions: attestation.session.questions,
        status: 'pending_review'
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∫—É—Ä–∞—Ç–æ—Ä–æ–º
    const pendingReviews = JSON.parse(localStorage.getItem('pendingReviews') || '[]');
    pendingReviews.push(result);
    localStorage.setItem('pendingReviews', JSON.stringify(pendingReviews));

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
    localStorage.removeItem(`attestation_${attestation.session.code}`);

    const sessions = JSON.parse(localStorage.getItem('attestationSessions') || '{}');
    delete sessions[attestation.session.code];
    localStorage.setItem('attestationSessions', JSON.stringify(sessions));

    alert('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ö—É—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∏ –æ–±—ä—è–≤–∏—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.');
    window.location.href = 'index.html';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üåü –ó–∞–ø—É—Å–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏...');
    window.selfAttestation = new SelfAttestation();
});