class AttestationSystem {
    constructor() {
        this.PASSWORD = 'adminsaplZ413xc#4';
        this.selectedServer = null;
        this.selectedRole = null;
        this.attesteeName = null;
        this.questions = null;

        this.init();
    }

    async init() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏...');
            this.loadQuestions();
            this.bindEvents();
            this.loadHistory();
            this.updateStats();
            this.startUIAnimations();
            console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.showError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã');
        }
    }

    loadQuestions() {
        // –ü–û–õ–ù–´–ô –±–∞–Ω–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –û–ë–û–ò–• —Å–µ—Ä–≤–µ—Ä–æ–≤
        this.questions = {
            "rublevo": {
                "helper": [
                    "–ù–∞–∑–æ–≤–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –•–µ–ª–ø–µ—Ä–∞",
                    "–ü–æ—Å–ª–µ –∑–∞—Ö–æ–¥–∞ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã?",
                    "–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ê–§–ö?",
                    "–ö–∞–∫ —Å–Ω—è—Ç—å –ø—Ä–µ–¥? –ê –≤—ã–≥–æ–≤–æ—Ä?",
                    "–ö–∞–∫–æ–π —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∏–∫—Å–∞—Ü–∏–π —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –∏–≥—Ä–æ–∫–∞?",
                    "–¢—ã —É–≤–∏–¥–µ–ª, —á—Ç–æ –∏–≥—Ä–æ–∫ —Å 5 —É—Ä–æ–≤–Ω–µ–º –Ω–∞—Ä—É—à–∏–ª, —á—Ç–æ —Ç—ã –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
                    "–ö–∞–∫–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–Ω–ª–∞–π–Ω –≤ –¥–µ–Ω—å/–º–µ—Å—è—Ü?",
                    "–ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ —É–≤–∏–¥–∏—à—å –∏–≥—Ä–æ–∫–∞ –ª–µ—Ç–∞—é—â–µ–≥–æ –ø–æ –∫–∞—Ä—Ç–µ?",
                    "–í–æ —Å–∫–æ–ª—å–∫–æ –ø–∞–¥–∞–µ—Ç –≥—Ä—É–∑?",
                    "–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∏–º–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞?",
                    "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é –∏ –∫–∞–∫–∞—è –Ω–∞ –Ω–µ–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å?",
                    "–î–ª—è —á–µ–≥–æ –∫–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä—ã?",
                    "–ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–µ—Ç–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –≤ –∫–ª–∞–Ω–µ?",
                    "–í –∫–∞–∫–∏—Ö —Ñ—Ä–∞–∫—Ü–∏—è—Ö –Ω–µ—Ç –≤—ã—Ö–æ–¥–∞ –Ω–∞ –∫—Ä—ã—à—É?",
                    "–° –∫–∞–∫–æ–≥–æ –∑–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –§—Ä–∞–∫—Ü–∏–π?",
                    "–ì–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É/–¥–æ–º?",
                    "–ß–µ—Ä–µ–∑ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É –∫–∞–∫–∏—Ö —Ñ—Ä–∞–∫—Ü–∏–π –Ω–µ–ª—å–∑—è –ø–æ–ª—É—á–∏—Ç—å –≤–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç?",
                    "–ö–∞–∫–∏–µ –∫–ª–∞–Ω—ã —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –±–∏—Ç–≤–µ –∑–∞ –∫–∞—Ä—Ç–µ–ª—å?",
                    "–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω —Å–±–æ—Ä –ú–ó–î–´ —Å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π?",
                    "–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–∏—Ç–≤–µ –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏?",
                    "–°–∫–æ–ª—å–∫–æ –∑–¥–æ—Ä–æ–≤—å—è –¥–æ–±–∞–≤–ª—è–µ—Ç –±–∞—Ñ—Ñ –î–æ—Ä–∏—Ç–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫–∞—á–∫–∏?",
                    "–ö–∞–∫–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ 1 —Å—Ç–∞–¥–∏—é —Å—Ä—ã–≤–∞ –ú–ü?",
                    "–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é –æ—Ç—ã–≥—Ä–æ–≤–∫—É?",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–æ–≤–æ–π –∂–∏–∑–Ω–∏?",
                    "–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ —á–∏–Ω–∏—Ç—å –º–∞—à–∏–Ω—ã –∏–≥—Ä–æ–∫–∞–º?",
                    "–ï—Å–ª–∏ —Ç—ã —É–≤–∏–¥–µ–ª —á—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–∞—Ä—É—à–∏–ª –±–µ–∑ —Ñ–æ—Ä–º—ã, –±—É–¥–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω–∏–∫?",
                    "–¢–µ–±—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–∞ —Ä–µ–ø–æ—Ä—Ç, –≥–¥–µ –∏–≥—Ä–æ–∫ –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ –≤—ã–¥–∞–Ω–Ω–æ–µ —Ç–æ–±–æ–π –Ω–∞–∫–∞–∑–∞–Ω–∏–µ. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
                    "–¢—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —Ä–µ–ø–æ—Ä—Ç –∏ –≤–∏–¥–∏—à—å, –∫–∞–∫ –∏–≥—Ä–æ–∫ –¥–∞–≤–∏—Ç –≤—Ç–æ—Ä–æ–≥–æ –Ω–∞ –º–∞—à–∏–Ω–µ... –ë—É–¥–µ—à—å –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å?"
                ],
                "moderator": [
                    "–ù–∞–∑–æ–≤–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞?",
                    "–ö–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Ç—ã –±—É–¥–µ—à—å –∏–∑–º–µ–Ω—è—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫—É?",
                    "–ö–∞–∫ —É–±—Ä–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø—Ä–æ–¥–∞–∂–µ–π –∏–º—É—â–µ—Å—Ç–≤–∞?",
                    "–ö–∞–∫–∏–µ —Å–∫–∏–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å?",
                    "–ß—Ç–æ –≤—ã–¥–∞–µ—Ç—Å—è –∑–∞ –æ–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏?",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ –ê–±—å—é–∑?",
                    "–ù–∞–∑–æ–≤–∏ –≤–∏–¥—ã –∞–±—å—é–∑–∞ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞",
                    "–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø—Ä–æ—Å—Ç—Ä–µ–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç—É—Ä—É ‚Äî —ç—Ç–æ —á—Ç–æ?",
                    "–í —á—ë–º —Ä–∞–∑–ª–∏—á–∏–µ IC –æ—Ç OOC?",
                    "–ö–∞–∫–æ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å –Ω–∞ –ë–£ —Ä—ã–Ω–∫–µ?",
                    "–†–µ–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –ª–∏ –∫–æ–ª–µ—Å–æ —Ä–µ–º. –∫–æ–º–ø–ª–µ–∫—Ç–æ–º?",
                    "–ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–∏–¥—ã –≤–∞–ª—é—Ç –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ?",
                    "–ö–∞–∫–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Ä–æ–≤–µ–Ω—å –æ—Ä—É–∂–∏—è, —á—Ç–æ–±—ã —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å?",
                    "–ö–æ–≥–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –∞—É–∫—Ü–∏–æ–Ω –≤ –ø–æ—Ä—Ç—É –ú–°–ö?",
                    "–° –∫–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —à–∏—Ä–æ–Ω –Ω–∞ –±—É?",
                    "–ö–∞–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Ü. —Ä–µ–π—Ç–∏–Ω–≥?",
                    "–ù–∞–∑–æ–≤–∏ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–∞—à—é—Ç–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ",
                    "–ì–ª–æ–±–∞–ª—å–Ω—ã–π ‚Äî IC –∏–ª–∏ OOC —á–∞—Ç?",
                    "–ö–∞–∫–∏–µ –≤–∏–¥—ã –≥–æ–Ω–æ–∫ –µ—Å—Ç—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ?",
                    "–ì–¥–µ –º–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∏—Ç–∫–æ–∏–Ω—ã?",
                    "–°–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ –µ—Å—Ç—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ –∏ –∫–∞–∫–∏–µ?",
                    "–ö–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?",
                    "–ö–∞–∫ –≤–∫–ª—é—á–∏—Ç—å –Ω–µ–æ–Ω –Ω–∞ –∞–≤—Ç–æ?",
                    "–ß—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–≥—Ä–æ–∫—É –ø–æ –ø–æ–≤–æ–¥—É √ó2 –¥–æ–Ω–∞—Ç–∞ —É –¥—Ä—É–≥–∞?",
                    "–ö–∞–∫–∏–µ –≤–∏–¥—ã –¥–µ—Ç–∞–ª–µ–π –≤ —Ç—é–Ω–∏–Ω–≥–µ –µ—Å—Ç—å?",
                    "–ù–∞–∑–æ–≤–∏ —Ö–æ–±–±–∏ –ø—Ä–æ–µ–∫—Ç–∞",
                    "–ß—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–≥—Ä–æ–∫—É, –Ω–µ —Å–æ–≥–ª–∞—Å–Ω–æ–º—É —Å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ–º?",
                    "–ò–≥—Ä–æ–∫ –ø–µ—Ä–µ–∫—Ä—ã–ª –¥–æ—Ä–æ–≥—É –¢–°. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ü–µ—Ä–µ–¥–∞—á–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ ‚Äî –∫–∞–∫–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ?",
                    "–ß–∏—Ç–µ—Ä –≤–µ–∑—ë—Ç –∏–≥—Ä–æ–∫–∞. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ß—Ç–æ –≤—ã–¥–∞–µ—Ç—Å—è –∑–∞ –ø–µ—Ä–µ–¥–∞—á—É –≤–∞–ª—é—Ç—ã —á–µ—Ä–µ–∑ –∫–∞–∑–∏–Ω–æ?",
                    "–ö–∞–∫ –º–æ–∂–Ω–æ –Ω–∞–Ω–µ—Å—Ç–∏ —É—â–µ—Ä–± —Å–µ—Ä–≤–µ—Ä—É –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º?",
                    "–ò–≥—Ä–æ–∫ –≥–æ–≤–æ—Ä–∏—Ç –ò–¥–∏ —É–±–µ–π—Å—è. –ó–∞ —á—Ç–æ –Ω–∞–∫–∞–∂–µ—à—å?",
                    "–ù–∞ —Å–ø–∞–≤–Ω–µ –∫—Ä–∏—á–∞—Ç –°–ª–∞–≤–∞ –£–∫—Ä–∞–∏–Ω–µ. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ü–ü–° –ø—Ä–æ—Å–∏—Ç –ø–∞—Å–ø–æ—Ä—Ç –±–µ–∑ –∏–Ω–≤–∏–∑–∞. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–û—Å–∫–æ—Ä–±–ª—è—é—Ç –≤ –≤–Ω–µ–∏–≥—Ä–æ–≤–æ–º —á–∞—Ç–µ. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–ª–∞–Ω–∞ ‚Äî —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–†–µ–ø–æ—Ä—Ç: –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –¥–µ–≤—É—à–∫–µ. –ü–æ—á–µ–º—É?",
                    "–ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª –≤–æ –≤—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ü–ü–°. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–†–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –∏–≥—Ä–æ–∫–∞–º–∏ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ ‚Äî –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è?",
                    "–ê–¥–º–∏–Ω –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ—Å–∏—Ç —Å–∫–∞–∑–∞—Ç—å –¥–æ–Ω–∞—Ç ‚Äî –º–æ–∂–Ω–æ?",
                    "–ö–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç—ã–≥—Ä—ã–≤–∞—é—Ç—Å—è –≤ –≥–æ–ª–æ—Å?",
                    "–ú–æ–∂–Ω–æ –ª–∏ –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –º–µ–¥–∏–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –ø–æ 6.16?",
                    "–í–æ–π–Ω–∞ –∫–ª–∞–Ω–æ–≤ ‚Äî –≤–º–µ—à–∞–ª—Å—è –ü–ü–°. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–†–µ–ø–æ—Ä—Ç –æ –ø–µ—Ä–µ–¥–∞—á–µ –∞–∫–∫–∞—É–Ω—Ç–∞ ‚Äî –¥–µ–π—Å—Ç–≤–∏—è?",
                    "–ë–ª–∞—Ç –æ—Ç –¥—Ä—É–≥–∞-–∞–¥–º–∏–Ω–∞. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ú–∞–∫—Å–∏–º—É–º –∑–∞–º–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –ú–ó?",
                    "–ö–∞–∫ –≤—ã–π—Ç–∏ –∏–∑ –ß–° –ª–∏–¥–µ—Ä–æ–≤?",
                    "–ö–æ–≥–¥–∞ —Å–ø—É—Ç–Ω–∏–∫ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ?",
                    "–ñ–∞–ª–æ–±–∞: –ª–∏–¥–µ—Ä –ø–æ–Ω–∏–∑–∏–ª —Å —Å–µ—Ä–∂–∞–Ω—Ç–∞ –¥–æ —Å—Ç–∞–∂—ë—Ä–∞. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ú–æ–∂–Ω–æ –ª–∏ —Ñ—Ä–∞–∫—Ü–∏—è–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å–∏ –∏–∑ —Ä–µ–∞–ª–∞?",
                    "–ò–Ω–∫–∞—Å—Å–∞—Ç–æ—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç. –†–µ–ø–æ—Ä—Ç. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–õ–∏–¥–µ—Ä –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ 3-–π —Ä–∞–∑ –∑–∞ –Ω–µ–¥–µ–ª—é. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–õ–∏–¥–µ—Ä –≤–∏–¥–∏—Ç —á–∞—Ç—ã –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤?",
                    "–ß–µ–ª–æ–≤–µ–∫ –ø–æ–ø—Ä–æ—Å–∏–ª —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ú–µ–¥–∏–∞ –ø–∞—Ä—Ç–Ω—ë—Ä –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –≤ —ç—Ñ–∏—Ä–µ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ò–≥—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∞–≥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã. –î–µ–π—Å—Ç–≤–∏—è?"
                ],
                "administrator": [
                    "–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                    "–ö–∞–∫ –∏ –≤ –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É",
                    "–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—ã–¥–∞—á—É —Ñ—Ä–∞–∫—Ü–∏–∏",
                    "–ù–∞–∑–æ–≤–∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –Ω–µ–∫—Å—Ç—Ä–ø",
                    "–ù–∞–∑–æ–≤–∏ –≤—Å–µ –≤–∏–¥—ã –∞–±—å—é–∑–∞",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ –£—â–µ—Ä–± —Å–µ—Ä–≤–µ—Ä—É",
                    "–° –∫–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–æ–∂–Ω–æ –≤—Å—Ç—É–ø–∞—Ç—å –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é",
                    "–ß—Ç–æ —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ —Ç—Ä—É–¥–æ–≤–æ–π –∫–Ω–∏–≥–∏",
                    "–ö–∞–∫–æ–µ –ö–î –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –î–ü–°",
                    "–ö–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –ú–ó",
                    "–ö–∞–∫ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å –¥–æ—Å—å–µ",
                    "–ö—Ç–æ –º–æ–∂–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å —É—Å–∏–ª–∏—Ç–µ–ª–∏ –¥–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏",
                    "–õ–∏–¥–µ—Ä –≤–∏–¥–∏—Ç —á–∞—Ç—ã –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤, –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–æ, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è?",
                    "–ö–æ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ª–∏–º–∏—Ç –ø—Ä–µ–º–∏–π –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏?",
                    "–ß—Ç–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∑–≤–µ–∑–¥–æ—á–∫–∞ –≤ F3, —Ä—è–¥–æ–º —Å –±—é–¥–∂–µ—Ç–æ–º —Ñ—Ä–∞–∫—Ü–∏–∏?",
                    "–°–∫–æ–ª—å–∫–æ –∑–∞–º–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ú–ó? –ê –≤–æ –§–°–ò–ù?",
                    "–¢—ã —Å–ª–µ–¥–∏—à—å –∑–∞ –∏–≥—Ä–æ–∫–æ–º, –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç —Å—Ç—Ä–µ–ª—å–±—É –∏–∑ –∞–≤—Ç–æ —Å —Ç–µ–∫–∞, –∞ –∑–∞—Ç–µ–º —Å –ø–æ–º–æ—â—å—é –±–∞–≥–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –∞–±–∞–∫–∞–Ω –∏ —Å—Ç—Ä–µ–ª—è–µ—Ç —É–∂–µ —Å –Ω–µ–≥–æ –∏–∑-–∑–∞ —Ä—É–ª—è. –ù–∞–∫–∞–∑—É–µ–º–æ?",
                    "–ù–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–µ–ª—å–±–∞ –≤ —â–µ–ª—å –≤ –≤–æ—Ä–æ—Ç–∞—Ö –∞—Ä–º–∏–∏?",
                    "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞—è –ø–æ —Ä–µ–ø–æ—Ä—Ç—É —É–≤–∏–¥–µ–ª, –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ü–ü–° –∑–∞–¥–µ—Ä–∂–∞–ª —Å–≤–æ–µ–≥–æ –∫–æ–ª–ª–µ–≥—É?",
                    "–†–∞–±–æ—Ç–∞—è –ø–æ —Ä–µ–ø–æ—Ä—Ç—É —Ç—ã –≤–∏–¥–∏—à—å, –∫–∞–∫ –≤ –∑–µ–ª–µ–Ω–æ–π –∑–æ–Ω–µ –∏–≥—Ä–æ–∫ —Ç–∞—Ä–∞–Ω–∏—Ç –¥—Ä—É–≥–æ–≥–æ –≤ –ø–æ–ø—ã—Ç–∫–∞—Ö –≤—ã—Ç–æ–ª–∫–∞—Ç—å. –ù–∞–∫–∞–∂–µ—à—å ?",
                    "–ß–µ–ª–æ–≤–µ–∫ –±–µ—Ä–µ—Ç –º–∞—à–∏–Ω—É xpeng –∏ –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç –Ω–∞ –∫—Ä—ã—à—É, —á—Ç–æ–±—ã –ø–æ –Ω–µ–π –∫–∞—Ç–∞—Ç—å—Å—è. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ü—Ä–∏—Ö–æ–¥–∏—Ç —Ä–µ–ø–æ—Ä—Ç, –∏–≥—Ä–æ–∫ –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ —Ç–æ, —á—Ç–æ –∫—Ç–æ-—Ç–æ –ª–æ–≤–∏—Ç –º–∞–∫—Ä–æ—Å–∞–º–∏ –æ—Ä—É–∂–∏—è –≤ —à–æ–ø–µ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ú—ç—Ä —Å–∞–¥–∏—Ç—Å—è –≤ –ª–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç –≤ –û–ü–ì –∏ –∫–∞—Ç–∞–µ—Ç –æ–±—ä–µ–∑–¥ –≤ –Ω–µ–º. –ù–∞–∫–∞–∂–µ—à—å?",
                    "–ï—Å–ª–∏ –æ–ø–≥—à–Ω–∏–∫ –∏–∑ —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å—Ç—Ä–µ–ª—è–µ—Ç –ø–æ –¥—Ä—É–≥–∏–º –∞–≤—Ç–æ, –∞ –º—ç—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç - –Ω–∞–∫–∞–∂–µ—à—å –∑–∞ –Ω—Ä–ø?",
                    "–¢–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –î–ú, –≥–¥–µ –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–ª–∞–Ω–µ, –Ω–æ —É –Ω–∏—Ö —Å–æ—é–∑. –ù–∞–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ –Ω–µ—Ç?"
                ]
            },
            "nevsky": {
                "helper": [
                    "–ù–∞–∑–æ–≤–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –•–µ–ª–ø–µ—Ä–∞",
                    "–ü–æ—Å–ª–µ –∑–∞—Ö–æ–¥–∞ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã?",
                    "–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ê–§–ö?",
                    "–ö–∞–∫ —Å–Ω—è—Ç—å –ø—Ä–µ–¥? –ê –≤—ã–≥–æ–≤–æ—Ä?",
                    "–ö–∞–∫–æ–π —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∏–∫—Å–∞—Ü–∏–π —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –∏–≥—Ä–æ–∫–∞?",
                    "–¢—ã —É–≤–∏–¥–µ–ª, —á—Ç–æ –∏–≥—Ä–æ–∫ —Å 5 —É—Ä–æ–≤–Ω–µ–º –Ω–∞—Ä—É—à–∏–ª, —á—Ç–æ —Ç—ã –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
                    "–ö–∞–∫–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–Ω–ª–∞–π–Ω –≤ –¥–µ–Ω—å/–º–µ—Å—è—Ü?",
                    "–ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ —É–≤–∏–¥–∏—à—å –∏–≥—Ä–æ–∫–∞ –ª–µ—Ç–∞—é—â–µ–≥–æ –ø–æ –∫–∞—Ä—Ç–µ?",
                    "–í–æ —Å–∫–æ–ª—å–∫–æ –ø–∞–¥–∞–µ—Ç –≥—Ä—É–∑?",
                    "–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∏–º–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞?",
                    "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é –∏ –∫–∞–∫–∞—è –Ω–∞ –Ω–µ–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å?",
                    "–î–ª—è —á–µ–≥–æ –∫–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä—ã?",
                    "–ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–µ—Ç–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –≤ –∫–ª–∞–Ω–µ?",
                    "–í –∫–∞–∫–∏—Ö —Ñ—Ä–∞–∫—Ü–∏—è—Ö –Ω–µ—Ç –≤—ã—Ö–æ–¥–∞ –Ω–∞ –∫—Ä—ã—à—É?",
                    "–° –∫–∞–∫–æ–≥–æ –∑–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –§—Ä–∞–∫—Ü–∏–π?",
                    "–ì–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É/–¥–æ–º?",
                    "–ß–µ—Ä–µ–∑ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É –∫–∞–∫–∏—Ö —Ñ—Ä–∞–∫—Ü–∏–π –Ω–µ–ª—å–∑—è –ø–æ–ª—É—á–∏—Ç—å –≤–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç?",
                    "–ö–∞–∫–∏–µ –∫–ª–∞–Ω—ã —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –±–∏—Ç–≤–µ –∑–∞ –∫–∞—Ä—Ç–µ–ª—å?",
                    "–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω —Å–±–æ—Ä –ú–ó–î–´ —Å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π?",
                    "–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–∏—Ç–≤–µ –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏?",
                    "–°–∫–æ–ª—å–∫–æ –∑–¥–æ—Ä–æ–≤—å—è –¥–æ–±–∞–≤–ª—è–µ—Ç –±–∞—Ñ—Ñ –î–æ—Ä–∏—Ç–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫–∞—á–∫–∏?",
                    "–ö–∞–∫–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ 1 —Å—Ç–∞–¥–∏—é —Å—Ä—ã–≤–∞ –ú–ü?",
                    "–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é –æ—Ç—ã–≥—Ä–æ–≤–∫—É?",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–æ–≤–æ–π –∂–∏–∑–Ω–∏?",
                    "–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ —á–∏–Ω–∏—Ç—å –º–∞—à–∏–Ω—ã –∏–≥—Ä–æ–∫–∞–º?",
                    "–ï—Å–ª–∏ —Ç—ã —É–≤–∏–¥–µ–ª —á—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–∞—Ä—É—à–∏–ª –±–µ–∑ —Ñ–æ—Ä–º—ã, –±—É–¥–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω–∏–∫?",
                    "–¢–µ–±—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–∞ —Ä–µ–ø–æ—Ä—Ç, –≥–¥–µ –∏–≥—Ä–æ–∫ –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ –≤—ã–¥–∞–Ω–Ω–æ–µ —Ç–æ–±–æ–π –Ω–∞–∫–∞–∑–∞–Ω–∏–µ. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
                    "–¢—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —Ä–µ–ø–æ—Ä—Ç –∏ –≤–∏–¥–∏—à—å, –∫–∞–∫ –∏–≥—Ä–æ–∫ –¥–∞–≤–∏—Ç –≤—Ç–æ—Ä–æ–≥–æ –Ω–∞ –º–∞—à–∏–Ω–µ... –ë—É–¥–µ—à—å –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å?"
                ],
                "moderator": [
                    "–ù–∞–∑–æ–≤–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞?",
                    "–ö–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Ç—ã –±—É–¥–µ—à—å –∏–∑–º–µ–Ω—è—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫—É?",
                    "–ö–∞–∫ —É–±—Ä–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø—Ä–æ–¥–∞–∂–µ–π –∏–º—É—â–µ—Å—Ç–≤–∞?",
                    "–ö–∞–∫–∏–µ —Å–∫–∏–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å?",
                    "–ß—Ç–æ –≤—ã–¥–∞–µ—Ç—Å—è –∑–∞ –æ–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏?",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ –ê–±—å—é–∑?",
                    "–ù–∞–∑–æ–≤–∏ –≤–∏–¥—ã –∞–±—å—é–∑–∞ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞",
                    "–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø—Ä–æ—Å—Ç—Ä–µ–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç—É—Ä—É ‚Äî —ç—Ç–æ —á—Ç–æ?",
                    "–í —á—ë–º —Ä–∞–∑–ª–∏—á–∏–µ IC –æ—Ç OOC?",
                    "–ö–∞–∫–æ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å –Ω–∞ –ë–£ —Ä—ã–Ω–∫–µ?",
                    "–†–µ–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –ª–∏ –∫–æ–ª–µ—Å–æ —Ä–µ–º. –∫–æ–º–ø–ª–µ–∫—Ç–æ–º?",
                    "–ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–∏–¥—ã –≤–∞–ª—é—Ç –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ?",
                    "–ö–∞–∫–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Ä–æ–≤–µ–Ω—å –æ—Ä—É–∂–∏—è, —á—Ç–æ–±—ã —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å?",
                    "–ö–æ–≥–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –∞—É–∫—Ü–∏–æ–Ω –≤ –ø–æ—Ä—Ç—É –ú–°–ö?",
                    "–° –∫–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —à–∏—Ä–æ–Ω –Ω–∞ –±—É?",
                    "–ö–∞–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Ü. —Ä–µ–π—Ç–∏–Ω–≥?",
                    "–ù–∞–∑–æ–≤–∏ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–∞—à—é—Ç–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ",
                    "–ì–ª–æ–±–∞–ª—å–Ω—ã–π ‚Äî IC –∏–ª–∏ OOC —á–∞—Ç?",
                    "–ö–∞–∫–∏–µ –≤–∏–¥—ã –≥–æ–Ω–æ–∫ –µ—Å—Ç—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ?",
                    "–ì–¥–µ –º–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∏—Ç–∫–æ–∏–Ω—ã?",
                    "–°–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ –µ—Å—Ç—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ –∏ –∫–∞–∫–∏–µ?",
                    "–ö–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?",
                    "–ö–∞–∫ –≤–∫–ª—é—á–∏—Ç—å –Ω–µ–æ–Ω –Ω–∞ –∞–≤—Ç–æ?",
                    "–ß—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–≥—Ä–æ–∫—É –ø–æ –ø–æ–≤–æ–¥—É √ó2 –¥–æ–Ω–∞—Ç–∞ —É –¥—Ä—É–≥–∞?",
                    "–ö–∞–∫–∏–µ –≤–∏–¥—ã –¥–µ—Ç–∞–ª–µ–π –≤ —Ç—é–Ω–∏–Ω–≥–µ –µ—Å—Ç—å?",
                    "–ù–∞–∑–æ–≤–∏ —Ö–æ–±–±–∏ –ø—Ä–æ–µ–∫—Ç–∞",
                    "–ß—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–≥—Ä–æ–∫—É, –Ω–µ —Å–æ–≥–ª–∞—Å–Ω–æ–º—É —Å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ–º?",
                    "–ò–≥—Ä–æ–∫ –ø–µ—Ä–µ–∫—Ä—ã–ª –¥–æ—Ä–æ–≥—É –¢–°. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ü–µ—Ä–µ–¥–∞—á–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ ‚Äî –∫–∞–∫–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ?",
                    "–ß–∏—Ç–µ—Ä –≤–µ–∑—ë—Ç –∏–≥—Ä–æ–∫–∞. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ß—Ç–æ –≤—ã–¥–∞–µ—Ç—Å—è –∑–∞ –ø–µ—Ä–µ–¥–∞—á—É –≤–∞–ª—é—Ç—ã —á–µ—Ä–µ–∑ –∫–∞–∑–∏–Ω–æ?",
                    "–ö–∞–∫ –º–æ–∂–Ω–æ –Ω–∞–Ω–µ—Å—Ç–∏ —É—â–µ—Ä–± —Å–µ—Ä–≤–µ—Ä—É –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º?",
                    "–ò–≥—Ä–æ–∫ –≥–æ–≤–æ—Ä–∏—Ç –ò–¥–∏ —É–±–µ–π—Å—è. –ó–∞ —á—Ç–æ –Ω–∞–∫–∞–∂–µ—à—å?",
                    "–ù–∞ —Å–ø–∞–≤–Ω–µ –∫—Ä–∏—á–∞—Ç –°–ª–∞–≤–∞ –£–∫—Ä–∞–∏–Ω–µ. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ü–ü–° –ø—Ä–æ—Å–∏—Ç –ø–∞—Å–ø–æ—Ä—Ç –±–µ–∑ –∏–Ω–≤–∏–∑–∞. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–û—Å–∫–æ—Ä–±–ª—è—é—Ç –≤ –≤–Ω–µ–∏–≥—Ä–æ–≤–æ–º —á–∞—Ç–µ. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–ª–∞–Ω–∞ ‚Äî —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–†–µ–ø–æ—Ä—Ç: –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –¥–µ–≤—É—à–∫–µ. –ü–æ—á–µ–º—É?",
                    "–ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª –≤–æ –≤—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ü–ü–°. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–†–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –∏–≥—Ä–æ–∫–∞–º–∏ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ ‚Äî –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è?",
                    "–ê–¥–º–∏–Ω –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ—Å–∏—Ç —Å–∫–∞–∑–∞—Ç—å –¥–æ–Ω–∞—Ç ‚Äî –º–æ–∂–Ω–æ?",
                    "–ö–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç—ã–≥—Ä—ã–≤–∞—é—Ç—Å—è –≤ –≥–æ–ª–æ—Å?",
                    "–ú–æ–∂–Ω–æ –ª–∏ –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –º–µ–¥–∏–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –ø–æ 6.16?",
                    "–í–æ–π–Ω–∞ –∫–ª–∞–Ω–æ–≤ ‚Äî –≤–º–µ—à–∞–ª—Å—è –ü–ü–°. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–†–µ–ø–æ—Ä—Ç –æ –ø–µ—Ä–µ–¥–∞—á–µ –∞–∫–∫–∞—É–Ω—Ç–∞ ‚Äî –¥–µ–π—Å—Ç–≤–∏—è?",
                    "–ë–ª–∞—Ç –æ—Ç –¥—Ä—É–≥–∞-–∞–¥–º–∏–Ω–∞. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ú–∞–∫—Å–∏–º—É–º –∑–∞–º–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –ú–ó?",
                    "–ö–∞–∫ –≤—ã–π—Ç–∏ –∏–∑ –ß–° –ª–∏–¥–µ—Ä–æ–≤?",
                    "–ö–æ–≥–¥–∞ —Å–ø—É—Ç–Ω–∏–∫ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ?",
                    "–ñ–∞–ª–æ–±–∞: –ª–∏–¥–µ—Ä –ø–æ–Ω–∏–∑–∏–ª —Å —Å–µ—Ä–∂–∞–Ω—Ç–∞ –¥–æ —Å—Ç–∞–∂—ë—Ä–∞. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ú–æ–∂–Ω–æ –ª–∏ —Ñ—Ä–∞–∫—Ü–∏—è–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å–∏ –∏–∑ —Ä–µ–∞–ª–∞?",
                    "–ò–Ω–∫–∞—Å—Å–∞—Ç–æ—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç. –†–µ–ø–æ—Ä—Ç. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–õ–∏–¥–µ—Ä –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ 3-–π —Ä–∞–∑ –∑–∞ –Ω–µ–¥–µ–ª—é. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–õ–∏–¥–µ—Ä –≤–∏–¥–∏—Ç —á–∞—Ç—ã –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤?",
                    "–ß–µ–ª–æ–≤–µ–∫ –ø–æ–ø—Ä–æ—Å–∏–ª —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç. –î–µ–π—Å—Ç–≤–∏—è?",
                    "–ú–µ–¥–∏–∞ –ø–∞—Ä—Ç–Ω—ë—Ä –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –≤ —ç—Ñ–∏—Ä–µ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ò–≥—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∞–≥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã. –î–µ–π—Å—Ç–≤–∏—è?"
                ],
                "administrator": [
                    "–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                    "–ö–∞–∫ –∏ –≤ –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É",
                    "–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—ã–¥–∞—á—É —Ñ—Ä–∞–∫—Ü–∏–∏",
                    "–ù–∞–∑–æ–≤–∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –Ω–µ–∫—Å—Ç—Ä–ø",
                    "–ù–∞–∑–æ–≤–∏ –≤—Å–µ –≤–∏–¥—ã –∞–±—å—é–∑–∞",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ –£—â–µ—Ä–± —Å–µ—Ä–≤–µ—Ä—É",
                    "–° –∫–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–æ–∂–Ω–æ –≤—Å—Ç—É–ø–∞—Ç—å –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é",
                    "–ß—Ç–æ —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ —Ç—Ä—É–¥–æ–≤–æ–π –∫–Ω–∏–≥–∏",
                    "–ö–∞–∫–æ–µ –ö–î –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –î–ü–°",
                    "–ö–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –ú–ó",
                    "–ö–∞–∫ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å –¥–æ—Å—å–µ",
                    "–ö—Ç–æ –º–æ–∂–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å —É—Å–∏–ª–∏—Ç–µ–ª–∏ –¥–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏",
                    "–õ–∏–¥–µ—Ä –≤–∏–¥–∏—Ç —á–∞—Ç—ã –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤, –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–æ, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è?",
                    "–ö–æ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ª–∏–º–∏—Ç –ø—Ä–µ–º–∏–π –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏?",
                    "–ß—Ç–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∑–≤–µ–∑–¥–æ—á–∫–∞ –≤ F3, —Ä—è–¥–æ–º —Å –±—é–¥–∂–µ—Ç–æ–º —Ñ—Ä–∞–∫—Ü–∏–∏?",
                    "–°–∫–æ–ª—å–∫–æ –∑–∞–º–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ú–ó? –ê –≤–æ –§–°–ò–ù?",
                    "–¢—ã —Å–ª–µ–¥–∏—à—å –∑–∞ –∏–≥—Ä–æ–∫–æ–º, –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç —Å—Ç—Ä–µ–ª—å–±—É –∏–∑ –∞–≤—Ç–æ —Å —Ç–µ–∫–∞, –∞ –∑–∞—Ç–µ–º —Å –ø–æ–º–æ—â—å—é –±–∞–≥–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –∞–±–∞–∫–∞–Ω –∏ —Å—Ç—Ä–µ–ª—è–µ—Ç —É–∂–µ —Å –Ω–µ–≥–æ –∏–∑-–∑–∞ —Ä—É–ª—è. –ù–∞–∫–∞–∑—É–µ–º–æ?",
                    "–ù–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–µ–ª—å–±–∞ –≤ —â–µ–ª—å –≤ –≤–æ—Ä–æ—Ç–∞—Ö –∞—Ä–º–∏–∏?",
                    "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞—è –ø–æ —Ä–µ–ø–æ—Ä—Ç—É —É–≤–∏–¥–µ–ª, –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ü–ü–° –∑–∞–¥–µ—Ä–∂–∞–ª —Å–≤–æ–µ–≥–æ –∫–æ–ª–ª–µ–≥—É?",
                    "–†–∞–±–æ—Ç–∞—è –ø–æ —Ä–µ–ø–æ—Ä—Ç—É —Ç—ã –≤–∏–¥–∏—à—å, –∫–∞–∫ –≤ –∑–µ–ª–µ–Ω–æ–π –∑–æ–Ω–µ –∏–≥—Ä–æ–∫ —Ç–∞—Ä–∞–Ω–∏—Ç –¥—Ä—É–≥–æ–≥–æ –≤ –ø–æ–ø—ã—Ç–∫–∞—Ö –≤—ã—Ç–æ–ª–∫–∞—Ç—å. –ù–∞–∫–∞–∂–µ—à—å ?",
                    "–ß–µ–ª–æ–≤–µ–∫ –±–µ—Ä–µ—Ç –º–∞—à–∏–Ω—É xpeng –∏ –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç –Ω–∞ –∫—Ä—ã—à—É, —á—Ç–æ–±—ã –ø–æ –Ω–µ–π –∫–∞—Ç–∞—Ç—å—Å—è. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ü—Ä–∏—Ö–æ–¥–∏—Ç —Ä–µ–ø–æ—Ä—Ç, –∏–≥—Ä–æ–∫ –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ —Ç–æ, —á—Ç–æ –∫—Ç–æ-—Ç–æ –ª–æ–≤–∏—Ç –º–∞–∫—Ä–æ—Å–∞–º–∏ –æ—Ä—É–∂–∏—è –≤ —à–æ–ø–µ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?",
                    "–ú—ç—Ä —Å–∞–¥–∏—Ç—Å—è –≤ –ª–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç –≤ –û–ü–ì –∏ –∫–∞—Ç–∞–µ—Ç –æ–±—ä–µ–∑–¥ –≤ –Ω–µ–º. –ù–∞–∫–∞–∂–µ—à—å?",
                    "–ï—Å–ª–∏ –æ–ø–≥—à–Ω–∏–∫ –∏–∑ —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å—Ç—Ä–µ–ª—è–µ—Ç –ø–æ –¥—Ä—É–≥–∏–º –∞–≤—Ç–æ, –∞ –º—ç—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç - –Ω–∞–∫–∞–∂–µ—à—å –∑–∞ –Ω—Ä–ø?",
                    "–¢–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –î–ú, –≥–¥–µ –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–ª–∞–Ω–µ, –Ω–æ —É –Ω–∏—Ö —Å–æ—é–∑. –ù–∞–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ –Ω–µ—Ç?"
                ]
            }
        };

        console.log('‚úÖ –ü–û–õ–ù–´–ô –±–∞–Ω–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω');
    }

    startUIAnimations() {
        // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫
        const cards = document.querySelectorAll('.card-animate');
        cards.forEach((card, index) => {
            setTimeout(() => {
                card.style.animationPlayState = 'running';
            }, index * 150);
        });

        // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫  
        this.addButtonHoverEffects();
        this.setupScrollAnimations();

        console.log('‚ú® UI –∞–Ω–∏–º–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã');
    }

    addButtonHoverEffects() {
        const buttons = document.querySelectorAll('.btn-primary, .btn-secondary');

        buttons.forEach(button => {
            button.addEventListener('mouseenter', (e) => {
                const rect = button.getBoundingClientRect();
                const ripple = document.createElement('div');
                ripple.style.cssText = `
                    position: absolute;
                    top: ${e.clientY - rect.top}px;
                    left: ${e.clientX - rect.left}px;
                    width: 0;
                    height: 0;
                    background: rgba(255,255,255,0.1);
                    border-radius: 50%;
                    transform: translate(-50%, -50%);
                    animation: ripple 0.6s ease-out;
                    pointer-events: none;
                `;

                button.style.position = 'relative';
                button.appendChild(ripple);

                setTimeout(() => ripple.remove(), 600);
            });
        });

        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    width: 100px;
                    height: 100px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }

    setupScrollAnimations() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.history-table-container').forEach(el => {
            el.style.opacity = '0';
            el.style.transform = 'translateY(30px)';
            el.style.transition = 'all 0.6s ease-out';
            observer.observe(el);
        });
    }

    bindEvents() {
        console.log('üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π...');

        const startBtn = document.getElementById('startAttestationBtn');
        const downloadBtn = document.getElementById('downloadHistoryBtn');

        if (startBtn) {
            startBtn.addEventListener('click', () => {
                this.showModal('passwordModal');
            });
        }

        if (downloadBtn) {
            downloadBtn.addEventListener('click', () => {
                this.downloadHistory();
            });
        }

        this.bindModalEvents();
        this.bindSelectionEvents();

        console.log('‚úÖ –°–æ–±—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    bindModalEvents() {
        const closeButtons = document.querySelectorAll('.close-btn');
        closeButtons.forEach(btn => {
            btn.addEventListener('click', (e) => {
                const modal = e.target.closest('.modal');
                if (modal) this.hideModal(modal.id);
            });
        });

        const actionButtons = [
            { id: 'cancelPasswordBtn', action: () => this.hideModal('passwordModal') },
            { id: 'submitPasswordBtn', action: () => this.checkPassword() },
            { id: 'cancelNameBtn', action: () => this.hideModal('nameModal') },
            { id: 'submitNameBtn', action: () => this.checkName() }
        ];

        actionButtons.forEach(({ id, action }) => {
            const btn = document.getElementById(id);
            if (btn) btn.addEventListener('click', action);
        });

        const inputs = [
            { id: 'passwordInput', action: () => this.checkPassword() },
            { id: 'attesteeName', action: () => this.checkName() }
        ];

        inputs.forEach(({ id, action }) => {
            const input = document.getElementById(id);
            if (input) {
                input.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') action();
                });
            }
        });

        document.getElementById('modalOverlay')?.addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                this.hideAllModals();
            }
        });
    }

    bindSelectionEvents() {
        const serverCards = document.querySelectorAll('[data-server]');
        serverCards.forEach(card => {
            card.addEventListener('click', () => {
                const serverId = card.dataset.server;
                console.log(`üñ•Ô∏è –í—ã–±—Ä–∞–Ω —Å–µ—Ä–≤–µ—Ä: ${serverId}`);
                this.selectServer(serverId);
            });
        });

        const roleCards = document.querySelectorAll('[data-role]');
        roleCards.forEach(card => {
            card.addEventListener('click', () => {
                const roleId = card.dataset.role;
                console.log(`üë§ –í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: ${roleId}`);
                this.selectRole(roleId);
            });
        });
    }

    showModal(modalId) {
        console.log(`üìã –û—Ç–∫—Ä—ã—Ç–∏–µ: ${modalId}`);

        const overlay = document.getElementById('modalOverlay');
        const modal = document.getElementById(modalId);

        if (!overlay || !modal) {
            console.error(`‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${modalId}`);
            return;
        }

        document.querySelectorAll('.modal').forEach(m => {
            m.classList.remove('show');
        });

        overlay.classList.add('show');
        modal.classList.add('show');

        const firstInput = modal.querySelector('input');
        if (firstInput) {
            setTimeout(() => firstInput.focus(), 150);
        }
    }

    hideModal(modalId) {
        const modal = document.getElementById(modalId);
        if (!modal) return;

        modal.classList.remove('show');

        const visibleModals = document.querySelectorAll('.modal.show');
        if (visibleModals.length === 0) {
            document.getElementById('modalOverlay').classList.remove('show');
        }

        modal.querySelectorAll('input').forEach(input => input.value = '');
        modal.querySelectorAll('.error-message').forEach(error => error.textContent = '');
    }

    hideAllModals() {
        console.log('üö´ –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω');

        document.getElementById('modalOverlay').classList.remove('show');
        document.querySelectorAll('.modal').forEach(modal => {
            modal.classList.remove('show');
        });

        document.querySelectorAll('input').forEach(input => input.value = '');
        document.querySelectorAll('.error-message').forEach(error => error.textContent = '');

        this.resetState();
    }

    resetState() {
        this.selectedServer = null;
        this.selectedRole = null;
        this.attesteeName = null;
    }

    checkPassword() {
        const input = document.getElementById('passwordInput');
        const errorElement = document.getElementById('passwordError');
        const password = input?.value?.trim();

        if (!password) {
            this.showError('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞', errorElement);
            return;
        }

        if (password !== this.PASSWORD) {
            this.showError('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞', errorElement);
            input.value = '';
            input.focus();

            input.style.animation = 'shake 0.5s ease-in-out';
            setTimeout(() => input.style.animation = '', 500);
            return;
        }

        console.log('‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
        this.hideModal('passwordModal');

        setTimeout(() => {
            this.showModal('nameModal');
        }, 200);
    }

    checkName() {
        const input = document.getElementById('attesteeName');
        const errorElement = document.getElementById('nameError');
        const name = input?.value?.trim();

        if (!name) {
            this.showError('–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∞—Ç—Ç–µ—Å—Ç—É–µ–º–æ–≥–æ', errorElement);
            return;
        }

        if (name.length < 2) {
            this.showError('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞', errorElement);
            return;
        }

        this.attesteeName = name;
        console.log(`üë§ –ê—Ç—Ç–µ—Å—Ç—É–µ–º—ã–π: ${this.attesteeName}`);

        this.hideModal('nameModal');

        setTimeout(() => {
            this.showModal('serverModal');
        }, 200);
    }

    selectServer(serverId) {
        if (!serverId || !this.questions?.[serverId]) {
            console.error(`‚ùå –°–µ—Ä–≤–µ—Ä "${serverId}" –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
            this.showError('–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }

        this.selectedServer = serverId;
        console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä: ${this.getServerName(serverId)}`);

        this.hideModal('serverModal');

        setTimeout(() => {
            this.showModal('roleModal');
        }, 200);
    }

    selectRole(roleId) {
        if (!roleId || !this.questions?.[this.selectedServer]?.[roleId]) {
            console.error(`‚ùå –†–æ–ª—å "${roleId}" –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`);
            this.showError('–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ä–æ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
            return;
        }

        const questionsCount = this.questions[this.selectedServer][roleId].length;
        this.selectedRole = roleId;

        console.log(`‚úÖ –†–æ–ª—å: ${this.getRoleName(roleId)} (${questionsCount} –≤–æ–ø—Ä–æ—Å–æ–≤)`);

        this.hideModal('roleModal');

        setTimeout(() => {
            this.startAttestation();
        }, 300);
    }

    startAttestation() {
        const config = {
            name: this.attesteeName,
            server: this.selectedServer,
            role: this.selectedRole,
            questions: this.questions[this.selectedServer][this.selectedRole],
            startTime: Date.now()
        };

        console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏:', config);

        localStorage.setItem('currentAttestation', JSON.stringify(config));

        const params = new URLSearchParams({
            server: config.server,
            role: config.role,
            name: config.name
        });

        const url = `curator.html?${params.toString()}`;
        console.log(`üîÑ –ü–µ—Ä–µ—Ö–æ–¥: ${url}`);

        window.location.href = url;
    }

    loadHistory() {
        const history = JSON.parse(localStorage.getItem('attestationHistory') || '[]');
        const tbody = document.getElementById('historyTableBody');

        if (!tbody) return;

        if (history.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="8" style="text-align: center; padding: 3rem; color: var(--text-muted);">
                        <div style="font-size: 1.1rem; margin-bottom: 0.5rem;">üìä –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</div>
                        <div style="font-size: 0.9rem;">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–π –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å</div>
                    </td>
                </tr>
            `;
            return;
        }

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
        history.sort((a, b) => new Date(b.date) - new Date(a.date));

        // –ò–°–ü–†–ê–í–õ–Ø–ï–ú –ë–ê–ì –° –ò–°–¢–û–†–ò–ï–ô: –ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∏–∑ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
        tbody.innerHTML = history.map((record, sortedIndex) => {
            // –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –≤ –Ω–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ
            const originalHistory = JSON.parse(localStorage.getItem('attestationHistory') || '[]');
            const originalIndex = originalHistory.findIndex(r => r.id === record.id);

            return `
                <tr onclick="window.attestationSystem.viewAttestation(${originalIndex})">
                    <td><strong>${record.name}</strong></td>
                    <td>${this.getRoleName(record.role)}</td>
                    <td>${this.getServerName(record.server)}</td>
                    <td>${new Date(record.date).toLocaleString('ru-RU', {
                        day: '2-digit',
                        month: '2-digit', 
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit'
                    })}</td>
                    <td><strong>${record.score.toFixed(1)}/10</strong></td>
                    <td>${this.formatDuration(record.duration)}</td>
                    <td>
                        <span class="status-badge ${record.passed ? 'status-passed' : 'status-failed'}">
                            ${record.passed ? '–°–¥–∞–Ω–æ' : '–ù–µ —Å–¥–∞–Ω–æ'}
                        </span>
                    </td>
                    <td>
                        <button class="view-btn" onclick="event.stopPropagation(); window.attestationSystem.viewAttestation(${originalIndex})">
                            –î–µ—Ç–∞–ª–∏
                        </button>
                    </td>
                </tr>
            `;
        }).join('');
    }

    updateStats() {
        const history = JSON.parse(localStorage.getItem('attestationHistory') || '[]');

        const totalCount = history.length;
        const passedCount = history.filter(record => record.passed).length;
        const averageScore = totalCount > 0 
            ? (history.reduce((sum, record) => sum + record.score, 0) / totalCount).toFixed(1)
            : '0.0';

        this.animateNumber('totalAttestations', totalCount);
        this.animateNumber('passedAttestations', passedCount);
        this.animateNumber('averageScore', parseFloat(averageScore), true);
    }

    animateNumber(elementId, targetValue, isFloat = false) {
        const element = document.getElementById(elementId);
        if (!element) return;

        const startValue = 0;
        const duration = 1000;
        const startTime = performance.now();

        const animate = (currentTime) => {
            const elapsed = currentTime - startTime;
            const progress = Math.min(elapsed / duration, 1);

            const easeOutQuart = 1 - Math.pow(1 - progress, 4);
            const currentValue = startValue + (targetValue - startValue) * easeOutQuart;

            element.textContent = isFloat 
                ? currentValue.toFixed(1)
                : Math.floor(currentValue);

            if (progress < 1) {
                requestAnimationFrame(animate);
            }
        };

        requestAnimationFrame(animate);
    }

    viewAttestation(index) {
        const history = JSON.parse(localStorage.getItem('attestationHistory') || '[]');
        const record = history[index];

        if (!record) {
            this.showError('–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            console.error(`‚ùå –ó–∞–ø–∏—Å—å —Å –∏–Ω–¥–µ–∫—Å–æ–º ${index} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${history.length}`);
            return;
        }

        console.log('üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏:', record.name, '–∏–Ω–¥–µ–∫—Å:', index);

        const detailsHtml = this.createAttestationDetails(record);
        const detailsEl = document.getElementById('attestationDetails');

        if (detailsEl) {
            detailsEl.innerHTML = detailsHtml;
        }

        this.showModal('attestationModal');
    }

    createAttestationDetails(record) {
        const stats = record.answers ? {
            correct: record.answers.filter(a => a && a.grade === 1).length,
            partial: record.answers.filter(a => a && a.grade === 0.5).length,
            incorrect: record.answers.filter(a => a && a.grade === 0).length
        } : { correct: 0, partial: 0, incorrect: 0 };

        // –î–û–ë–ê–í–õ–Ø–ï–ú –î–ï–¢–ê–õ–¨–ù–´–ô –õ–û–ì –í–û–ü–†–û–°–û–í
        let questionLogHtml = '';
        if (record.answers && record.answers.length > 0) {
            questionLogHtml = `
                <div class="question-log">
                    <div class="question-log-header">
                        <h4>üìù –î–µ—Ç–∞–ª—å–Ω—ã–π –ª–æ–≥ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º</h4>
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">
                            –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: ${record.answers.length}
                        </div>
                    </div>

                    ${record.answers.map((answer, index) => {
                        if (!answer) return '';

                        const gradeClass = answer.grade === 1 ? 'correct' : 
                                         answer.grade === 0.5 ? 'partial' : 'incorrect';
                        const gradeText = answer.grade === 1 ? '–í–µ—Ä–Ω–æ' : 
                                        answer.grade === 0.5 ? '–ß–∞—Å—Ç–∏—á–Ω–æ' : '–ù–µ–≤–µ—Ä–Ω–æ';
                        const gradeColor = answer.grade === 1 ? 'grade-correct' : 
                                         answer.grade === 0.5 ? 'grade-partial' : 'grade-incorrect';

                        return `
                            <div class="question-item ${gradeClass}">
                                <div class="question-header">
                                    <div class="question-number">
                                        –í–æ–ø—Ä–æ—Å ${index + 1}
                                    </div>
                                    <div class="question-grade ${gradeColor}">
                                        ${gradeText} (${answer.grade} –±–∞–ª–ª${answer.grade === 1 ? '' : answer.grade === 0.5 ? '–∞' : '–æ–≤'})
                                    </div>
                                </div>

                                <div class="question-text">
                                    ${answer.question}
                                </div>

                                <div class="question-comment">
                                    <textarea 
                                        class="comment-input" 
                                        placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∞—Ç—Ç–µ—Å—Ç—É–µ–º–æ–≥–æ (–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –æ—à–∏–±–∫–∏, —Å–æ–≤–µ—Ç—ã)..."
                                        data-question-index="${index}"
                                    >${answer.comment || ''}</textarea>
                                </div>
                            </div>
                        `;
                    }).join('')}
                </div>
            `;
        }

        return `
            <div class="attestation-summary" style="
                display: grid; 
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); 
                gap: 1rem; 
                margin-bottom: 2rem;
            ">
                <div style="
                    background: var(--bg-tertiary); 
                    padding: 1.5rem; 
                    border-radius: 12px; 
                    text-align: center;
                    border: 1px solid var(--border-light);
                ">
                    <div style="font-size: 2rem; font-weight: 700; color: var(--blue-primary); margin-bottom: 0.5rem;">
                        ${record.score.toFixed(1)}/10
                    </div>
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª</div>
                </div>

                <div style="
                    background: var(--bg-tertiary); 
                    padding: 1.5rem; 
                    border-radius: 12px; 
                    text-align: center;
                    border: 1px solid var(--border-light);
                ">
                    <div style="font-size: 1.8rem; font-weight: 700; color: var(--success); margin-bottom: 0.5rem;">
                        ${stats.correct}
                    </div>
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">–í–µ—Ä–Ω–æ</div>
                </div>

                <div style="
                    background: var(--bg-tertiary); 
                    padding: 1.5rem; 
                    border-radius: 12px; 
                    text-align: center;
                    border: 1px solid var(--border-light);
                ">
                    <div style="font-size: 1.8rem; font-weight: 700; color: var(--warning); margin-bottom: 0.5rem;">
                        ${stats.partial}
                    </div>
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">–ß–∞—Å—Ç–∏—á–Ω–æ</div>
                </div>

                <div style="
                    background: var(--bg-tertiary); 
                    padding: 1.5rem; 
                    border-radius: 12px; 
                    text-align: center;
                    border: 1px solid var(--border-light);
                ">
                    <div style="font-size: 1.8rem; font-weight: 700; color: var(--error); margin-bottom: 0.5rem;">
                        ${stats.incorrect}
                    </div>
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">–ù–µ–≤–µ—Ä–Ω–æ</div>
                </div>
            </div>

            <div style="
                background: var(--bg-tertiary); 
                padding: 1.5rem; 
                border-radius: 12px; 
                margin-bottom: 1rem;
                border: 1px solid var(--border-light);
            ">
                <h4 style="color: var(--text-primary); margin-bottom: 1rem; font-size: 1.1rem;">
                    üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏
                </h4>

                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; font-size: 0.9rem;">
                    <div>
                        <strong style="color: var(--blue-primary);">–ê—Ç—Ç–µ—Å—Ç—É–µ–º—ã–π:</strong><br>
                        <span style="color: var(--text-secondary);">${record.name}</span>
                    </div>
                    <div>
                        <strong style="color: var(--blue-primary);">–†–æ–ª—å:</strong><br>
                        <span style="color: var(--text-secondary);">${this.getRoleName(record.role)}</span>
                    </div>
                    <div>
                        <strong style="color: var(--blue-primary);">–°–µ—Ä–≤–µ—Ä:</strong><br>
                        <span style="color: var(--text-secondary);">${this.getServerName(record.server)}</span>
                    </div>
                    <div>
                        <strong style="color: var(--blue-primary);">–î–∞—Ç–∞:</strong><br>
                        <span style="color: var(--text-secondary);">${new Date(record.date).toLocaleString('ru-RU')}</span>
                    </div>
                    <div>
                        <strong style="color: var(--blue-primary);">–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:</strong><br>
                        <span style="color: var(--text-secondary);">${this.formatDuration(record.duration)}</span>
                    </div>
                    <div>
                        <strong style="color: var(--blue-primary);">–°—Ç–∞—Ç—É—Å:</strong><br>
                        <span style="color: ${record.passed ? 'var(--success)' : 'var(--error)'};">
                            ${record.passed ? '‚úÖ –ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞' : '‚ùå –ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞'}
                        </span>
                    </div>
                </div>
            </div>

            ${questionLogHtml}
        `;
    }

    downloadHistory() {
        const history = JSON.parse(localStorage.getItem('attestationHistory') || '[]');

        if (history.length === 0) {
            this.showError('–ò—Å—Ç–æ—Ä–∏—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–π –ø—É—Å—Ç–∞');
            return;
        }

        console.log(`üìÅ –≠–∫—Å–ø–æ—Ä—Ç ${history.length} –∑–∞–ø–∏—Å–µ–π`);

        let content = '–ò–°–¢–û–†–ò–Ø –ê–¢–¢–ï–°–¢–ê–¶–ò–ô –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò\n';
        content += '='.repeat(60) + '\n\n';
        content += `–î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${new Date().toLocaleString('ru-RU')}\n`;
        content += `–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${history.length}\n\n`;

        history.forEach((record, index) => {
            const passed = record.passed ? '–°–î–ê–ù–û' : '–ù–ï –°–î–ê–ù–û';

            content += `${index + 1}. ${record.name.toUpperCase()}\n`;
            content += `   –†–æ–ª—å: ${this.getRoleName(record.role)}\n`;
            content += `   –°–µ—Ä–≤–µ—Ä: ${this.getServerName(record.server)}\n`;
            content += `   –î–∞—Ç–∞: ${new Date(record.date).toLocaleString('ru-RU')}\n`;
            content += `   –†–µ–∑—É–ª—å—Ç–∞—Ç: ${record.score.toFixed(1)}/10 (${passed})\n`;
            content += `   –í—Ä–µ–º—è: ${this.formatDuration(record.duration)}\n`;
            content += '   ' + '-'.repeat(50) + '\n\n';
        });

        const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');

        a.href = url;
        a.download = `attestation-history-${new Date().toISOString().split('T')[0]}.txt`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);

        console.log('‚úÖ –§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
    }

    // Utility –º–µ—Ç–æ–¥—ã
    getRoleName(roleId) {
        const roles = {
            'helper': '–•–ï–õ–ü–ï–†',
            'moderator': '–ú–û–î–ï–†–ê–¢–û–†', 
            'administrator': '–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†'
        };
        return roles[roleId] || roleId.toUpperCase();
    }

    getServerName(serverId) {
        const servers = {
            'rublevo': '–†—É–±–ª–µ–≤—Å–∫–∏–π',
            'nevsky': '–ù–µ–≤—Å–∫–∏–π'
        };
        return servers[serverId] || serverId;
    }

    formatDuration(seconds) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
    }

    showError(message, element = null) {
        console.error('‚ö†Ô∏è', message);

        if (element) {
            element.textContent = message;
            element.style.color = 'var(--error)';

            element.style.transform = 'translateY(-10px)';
            element.style.opacity = '0';

            requestAnimationFrame(() => {
                element.style.transition = 'all 0.3s ease';
                element.style.transform = 'translateY(0)';
                element.style.opacity = '1';
            });

        } else {
            alert(message);
        }
    }

    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    static saveAttestationResult(result) {
        const history = JSON.parse(localStorage.getItem('attestationHistory') || '[]');

        const record = {
            ...result,
            date: new Date().toISOString(),
            id: Date.now() // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        };

        history.push(record);
        localStorage.setItem('attestationHistory', JSON.stringify(history));

        console.log('üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', record.name, record.score.toFixed(1) + '/10');
        return record;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    console.log('üåü –°–∏—Å—Ç–µ–º–∞ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');

    const additionalStyles = `
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
    `;

    const style = document.createElement('style');
    style.textContent = additionalStyles;
    document.head.appendChild(style);

    window.attestationSystem = new AttestationSystem();
});

window.AttestationSystem = AttestationSystem;